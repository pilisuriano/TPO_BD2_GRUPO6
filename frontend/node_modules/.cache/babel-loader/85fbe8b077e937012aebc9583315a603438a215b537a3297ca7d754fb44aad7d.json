{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer } from './Reducers/ProductReducers';\nimport { productDetailsReducer } from './Reducers/ProductReducers';\nimport { cartReducer } from './Reducers/CartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from './Reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer } from './Reducers/OrderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer\n});\nconst cartItemsFromLocalStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\n\n//LOGIN\nconst userInfoFromLocalStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\n//SHIPPING ADDRESS\nconst shippingAddressFromLocalStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromLocalStorage,\n    shippingAddress: shippingAddressFromLocalStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromLocalStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","orderDetails","orderPay","cartItemsFromLocalStorage","localStorage","getItem","JSON","parse","userInfoFromLocalStorage","shippingAddressFromLocalStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"sources":["D:/GitHub/TPO_BD2_GRUPO6 - copia/frontend/src/Redux/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { productListReducer } from './Reducers/ProductReducers';\r\nimport { productDetailsReducer } from './Reducers/ProductReducers';\r\nimport { cartReducer } from './Reducers/CartReducers';\r\nimport { userLoginReducer, userRegisterReducer,userDetailsReducer,userUpdateProfileReducer } from './Reducers/userReducers';\r\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer } from './Reducers/OrderReducers';\r\n\r\nconst reducer = combineReducers({\r\n    productList : productListReducer,\r\n    productDetails : productDetailsReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n});\r\n\r\nconst cartItemsFromLocalStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\r\n\r\n//LOGIN\r\nconst userInfoFromLocalStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\r\n//SHIPPING ADDRESS\r\nconst shippingAddressFromLocalStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\r\n\r\nconst initialState = {\r\n    cart: { cartItems: cartItemsFromLocalStorage, shippingAddress: shippingAddressFromLocalStorage},\r\n    userLogin: { userInfo: userInfoFromLocalStorage },\r\n};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,kBAAkB,QAAQ,4BAA4B;AAC/D,SAASC,qBAAqB,QAAQ,4BAA4B;AAClE,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,gBAAgB,EAAEC,mBAAmB,EAACC,kBAAkB,EAACC,wBAAwB,QAAQ,yBAAyB;AAC3H,SAASC,kBAAkB,EAAEC,mBAAmB,EAAEC,eAAe,QAAQ,0BAA0B;AAEnG,MAAMC,OAAO,GAAGd,eAAe,CAAC;EAC5Be,WAAW,EAAGX,kBAAkB;EAChCY,cAAc,EAAGX,qBAAqB;EACtCY,IAAI,EAAEX,WAAW;EACjBY,SAAS,EAAEX,gBAAgB;EAC3BY,YAAY,EAAEX,mBAAmB;EACjCY,WAAW,EAAEX,kBAAkB;EAC/BY,iBAAiB,EAAEX,wBAAwB;EAC3CY,WAAW,EAAEX,kBAAkB;EAC/BY,YAAY,EAAEX,mBAAmB;EACjCY,QAAQ,EAAEX;AACd,CAAC,CAAC;AAEF,MAAMY,yBAAyB,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAAG,EAAE;;AAExH;AACA,MAAMG,wBAAwB,GAAGJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI;AACvH;AACA,MAAMI,+BAA+B,GAAGL,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,CAAC;AAE1I,MAAMK,YAAY,GAAG;EACjBf,IAAI,EAAE;IAAEgB,SAAS,EAAER,yBAAyB;IAAES,eAAe,EAAEH;EAA+B,CAAC;EAC/Fb,SAAS,EAAE;IAAEiB,QAAQ,EAAEL;EAAyB;AACpD,CAAC;AACD,MAAMM,UAAU,GAAG,CAAClC,KAAK,CAAC;AAC1B,MAAMmC,KAAK,GAAGtC,WAAW,CACrBe,OAAO,EACPkB,YAAY,EACZ7B,mBAAmB,CAACF,eAAe,CAAC,GAAGmC,UAAU,CAAC,CACtD,CAAC;AAED,eAAeC,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}