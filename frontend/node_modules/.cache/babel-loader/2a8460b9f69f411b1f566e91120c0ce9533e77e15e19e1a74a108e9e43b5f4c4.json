{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\TPO_BD2_GRUPO6 - copia\\\\frontend\\\\src\\\\screens\\\\ProductListScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductListScreen() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchProducts = async () => {\n      const {\n        data\n      } = await axios.get(`/api/products`);\n      if (Array.isArray(data.products)) {\n        setProducts(data.products);\n      } else {\n        console.error('Data.products is not an array:', data.products);\n      }\n    };\n    fetchProducts();\n  }, []);\n  const handleUpdate = product => {\n    // Aquí puedes redirigir al usuario a la pantalla de actualización de producto\n    // con el producto como parámetro\n    navigate(`/update-product/${product._id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleUpdate(product),\n        children: \"Actualizar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, product._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductListScreen, \"IM33jVfoypN7Irf5pwXOwm+Oe18=\", false, function () {\n  return [useNavigate];\n});\n_c = ProductListScreen;\nconst cardStyle = {\n  display: 'flex',\n  justifyContent: 'space-between',\n  border: '1px solid #ccc',\n  borderRadius: '4px',\n  padding: '10px',\n  margin: '10px'\n};\nconst imageStyle = {\n  maxWidth: '10%'\n};\nconst contentStyle = {\n  marginRight: '10px'\n};\nexport default ProductListScreen;\nvar _c;\n$RefreshReg$(_c, \"ProductListScreen\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","jsxDEV","_jsxDEV","ProductListScreen","_s","products","setProducts","navigate","fetchProducts","data","get","Array","isArray","console","error","handleUpdate","product","_id","children","map","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","cardStyle","display","justifyContent","border","borderRadius","padding","margin","imageStyle","maxWidth","contentStyle","marginRight","$RefreshReg$"],"sources":["D:/GitHub/TPO_BD2_GRUPO6 - copia/frontend/src/screens/ProductListScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate} from 'react-router-dom';\r\n\r\nfunction ProductListScreen() {\r\n  const [products, setProducts] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      const { data } = await axios.get(`/api/products`);\r\n      if (Array.isArray(data.products)) {\r\n        setProducts(data.products);\r\n      } else {\r\n        console.error('Data.products is not an array:', data.products);\r\n      }\r\n    }\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const handleUpdate = (product) => {\r\n    // Aquí puedes redirigir al usuario a la pantalla de actualización de producto\r\n    // con el producto como parámetro\r\n    navigate(`/update-product/${product._id}`);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {products.map(product => (\r\n        <div key={product._id}>\r\n          <h2>{product.name}</h2>\r\n          <button onClick={() => handleUpdate(product)}>Actualizar</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst cardStyle = {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    border: '1px solid #ccc',\r\n    borderRadius: '4px',\r\n    padding: '10px',\r\n    margin: '10px',\r\n};\r\n\r\nconst imageStyle = {\r\n    maxWidth: '10%',\r\n};\r\n\r\nconst contentStyle = {\r\n    marginRight: '10px',\r\n};\r\n\r\n\r\n\r\nexport default ProductListScreen;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMS,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACd,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,eAAe,CAAC;MACjD,IAAIC,KAAK,CAACC,OAAO,CAACH,IAAI,CAACJ,QAAQ,CAAC,EAAE;QAChCC,WAAW,CAACG,IAAI,CAACJ,QAAQ,CAAC;MAC5B,CAAC,MAAM;QACLQ,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEL,IAAI,CAACJ,QAAQ,CAAC;MAChE;IACF,CAAC;IACDG,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,YAAY,GAAIC,OAAO,IAAK;IAChC;IACA;IACAT,QAAQ,CAAC,mBAAmBS,OAAO,CAACC,GAAG,EAAE,CAAC;EAC5C,CAAC;EAED,oBACEf,OAAA;IAAAgB,QAAA,EACGb,QAAQ,CAACc,GAAG,CAACH,OAAO,iBACnBd,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAAgB,QAAA,EAAKF,OAAO,CAACI;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvBtB,OAAA;QAAQuB,OAAO,EAAEA,CAAA,KAAMV,YAAY,CAACC,OAAO,CAAE;QAAAE,QAAA,EAAC;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAFzDR,OAAO,CAACC,GAAG;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGhB,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACpB,EAAA,CAhCQD,iBAAiB;EAAA,QAEPH,WAAW;AAAA;AAAA0B,EAAA,GAFrBvB,iBAAiB;AAmC1B,MAAMwB,SAAS,GAAG;EACdC,OAAO,EAAE,MAAM;EACfC,cAAc,EAAE,eAAe;EAC/BC,MAAM,EAAE,gBAAgB;EACxBC,YAAY,EAAE,KAAK;EACnBC,OAAO,EAAE,MAAM;EACfC,MAAM,EAAE;AACZ,CAAC;AAED,MAAMC,UAAU,GAAG;EACfC,QAAQ,EAAE;AACd,CAAC;AAED,MAAMC,YAAY,GAAG;EACjBC,WAAW,EAAE;AACjB,CAAC;AAID,eAAelC,iBAAiB;AAAC,IAAAuB,EAAA;AAAAY,YAAA,CAAAZ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}