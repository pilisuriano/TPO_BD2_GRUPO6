{"ast":null,"code":"import { PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from '../Constants/ProductConstants';\nimport { PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS } from '../Constants/ProductConstants';\nimport axios from 'axios';\nimport { PRODUCT_CREATE_REVIEW_FAIL } from './../Constants/ProductConstants';\nimport { logout } from './userActions';\n\n//PRODUCT LIST\nexport const listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/products');\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n//SINGLE PRODUCT\nexport const listProductDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/products/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n//REVIEW CREATE\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.post(`/api/products/${productId}/review`, review, config);\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"names":["PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","axios","PRODUCT_CREATE_REVIEW_FAIL","logout","listProducts","dispatch","type","data","get","payload","error","response","message","listProductDetails","id","createProductReview","productId","review","getState","userLogin","userInfo","config","headers","Authorization","token","post"],"sources":["D:/GitHub/TPO_BD2_GRUPO6 - copia/frontend/src/Redux/Actions/ProductActions.js"],"sourcesContent":["import {PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS} from '../Constants/ProductConstants';\r\nimport {PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS} from '../Constants/ProductConstants';\r\nimport axios from 'axios';\r\nimport { PRODUCT_CREATE_REVIEW_FAIL } from './../Constants/ProductConstants';\r\nimport { logout } from './userActions';\r\n\r\n//PRODUCT LIST\r\nexport const listProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n        const { data } = await axios.get('/api/products');\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n}\r\n\r\n\r\n//SINGLE PRODUCT\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n}\r\n\r\n//REVIEW CREATE\r\nexport const createProductReview = (productId, review) => async (dispatch,getState) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST});\r\n        const { userLogin: { userInfo }, } = getState();\r\n\r\n        const config = {    \r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        await axios.post(`/api/products/${productId}/review`, review, config);\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS\r\n        });\r\n\r\n    } catch (error) {\r\n        const message = \r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        if (message === 'Not authorized, token failed') {\r\n                dispatch(logout());\r\n        }\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: message,\r\n        });\r\n    }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}