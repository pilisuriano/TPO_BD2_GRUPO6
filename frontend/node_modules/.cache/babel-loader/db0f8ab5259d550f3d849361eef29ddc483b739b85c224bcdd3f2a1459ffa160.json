{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_FAIL, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_DETAILS_RESET, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS } from \"../Constants/UserConstants\";\nimport axios from 'axios';\n\n//LOGIN\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/users/login`, {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n//LOGOUT\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  document.location.href = '/login';\n};\n\n//REGISTER\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/users`, {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n//USER DETAILS\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authrization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n  }\n};\n\n//UPDATE PROFILE\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"names":["USER_LOGIN_REQUEST","USER_LOGIN_FAIL","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","axios","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","document","location","href","register","name","getUserDetails","id","getState","userLogin","userInfo","Authrization","token","get","updateUserProfile","user","Authorization","put"],"sources":["C:/Users/gonza/OneDrive/Desktop/UADE/Bases de Datos II/TPO_BD2_GRUPO6/frontend/src/Redux/Actions/userActions.js"],"sourcesContent":["import { USER_LOGIN_REQUEST, USER_LOGIN_FAIL, USER_LOGIN_SUCCESS, USER_LOGOUT,\r\n    USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS,\r\n    USER_DETAILS_RESET,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS,\r\n } from \"../Constants/UserConstants\";\r\nimport axios from 'axios';\r\n\r\n//LOGIN\r\nexport const login = (email,password) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_LOGIN_REQUEST});\r\n\r\n        const config = {    \r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(`/api/users/login`, { email, password }, config);\r\n\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n//LOGOUT\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    dispatch({ type: USER_LOGOUT });\r\n    dispatch({ type: USER_DETAILS_RESET});\r\n    document.location.href = '/login';\r\n};\r\n\r\n//REGISTER\r\nexport const register = (name,email,password) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_REGISTER_REQUEST});\r\n\r\n        const config = {    \r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(`/api/users`, {name, email, password }, config);\r\n\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data,\r\n        });\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n//USER DETAILS\r\nexport const getUserDetails = (id) => async (dispatch,getState) => {\r\n    try {\r\n        dispatch({ type: USER_DETAILS_REQUEST});\r\n        const { userLogin: { userInfo }, } = getState();\r\n\r\n        const config = {    \r\n            headers: {\r\n                Authrization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n    } catch (error) {\r\n        const message = \r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        if (message === 'Not authorized, token failed') {\r\n                dispatch(logout());\r\n        }\r\n    }\r\n};\r\n\r\n//UPDATE PROFILE\r\nexport const updateUserProfile = (user) => async (dispatch,getState) => {\r\n    try {\r\n        dispatch({ type: USER_UPDATE_PROFILE_REQUEST});\r\n        const { userLogin: { userInfo }, } = getState();\r\n\r\n        const config = {    \r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data,\r\n        });\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n\r\n    } catch (error) {\r\n        const message = \r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        if (message === 'Not authorized, token failed') {\r\n                dispatch(logout());\r\n        }\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: message,\r\n        });\r\n    }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}