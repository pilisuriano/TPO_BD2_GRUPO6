{"ast":null,"code":"import { CART_CLEAR_ITEMS } from \"../Constants/CartConstants\";\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL } from \"../Constants/orderConstants\";\nimport axios from \"axios\";\nimport { logout } from \"./userActions.js\";\n\n//CREATE ORDER \nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: data\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n//ORDER DETAILS\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"names":["CART_CLEAR_ITEMS","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","axios","logout","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","localStorage","removeItem","error","message","response","getOrderDetails","id","get"],"sources":["D:/GitHub/TPO_BD2_GRUPO6 - copia/frontend/src/Redux/Actions/OrderActions.js"],"sourcesContent":["import { CART_CLEAR_ITEMS } from \"../Constants/CartConstants\";\r\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL } from \"../Constants/orderConstants\";\r\nimport axios from \"axios\";\r\nimport {logout} from \"./userActions.js\";\r\n\r\n\r\n//CREATE ORDER \r\nexport const createOrder = (order) => async (dispatch,getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_CREATE_REQUEST});\r\n        const { userLogin: { userInfo }, } = getState();\r\n\r\n        const config = {    \r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(`/api/orders`, order, config);\r\n\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data,\r\n        });\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data,\r\n        });\r\n\r\n        localStorage.removeItem('cartItems');\r\n\r\n    } catch (error) {\r\n        const message = \r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        if (message === 'Not authorized, token failed') {\r\n                dispatch(logout());\r\n        }\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n//ORDER DETAILS\r\nexport const getOrderDetails = (id) => async (dispatch,getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_DETAILS_REQUEST});\r\n        const { userLogin: { userInfo }, } = getState();\r\n\r\n        const config = {    \r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        const message = \r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        if (message === 'Not authorized, token failed') {\r\n                dispatch(logout());\r\n        }\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: message,\r\n        });\r\n    }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}